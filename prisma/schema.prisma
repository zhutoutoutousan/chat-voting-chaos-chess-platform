generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id     String  @id @default(cuid())
    email  String  @unique
    name   String?
    rating Int     @default(1500)
    // ... other user fields

    // Relations
    hostedLobbies Lobby[]  @relation("HostedLobbies")
    games         Game[] // User can be in multiple games
    players       Player[] // User can be multiple players
}

model Lobby {
    id          String   @id @default(cuid())
    hostId      String
    timeControl String
    mode        String
    createdAt   DateTime @default(now())

    // Relations
    host User @relation("HostedLobbies", fields: [hostId], references: [id])
}

model Game {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    status    String   @default("waiting") // waiting, playing, finished

    // Relations
    userId  String? // Optional user reference
    user    User?    @relation(fields: [userId], references: [id])
    players Player[]
    moves   Move[]
}

model Player {
    id     String @id @default(cuid())
    userId String
    gameId String
    color  String // white or black

    // Relations
    user  User   @relation(fields: [userId], references: [id])
    game  Game   @relation(fields: [gameId], references: [id])
    moves Move[]
}

model Move {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    gameId    String
    playerId  String
    from      String
    to        String
    piece     String

    // Relations
    game   Game   @relation(fields: [gameId], references: [id])
    player Player @relation(fields: [playerId], references: [id])
}
